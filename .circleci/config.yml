version: 2

defaults: &defaults
  docker:
    - image: circleci/android:api-28
  environment:
    JVM_OPTS: -Xmx3200m

jobs:
  unit-tests:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
       name: Install fastlane
       command: bundle install
    #      - run:
    #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    #         command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#    - run:
#        name: Run Tests
#        command: ./gradlew lint test
    - run:
        name: Run unit tests
        command: bundle exec fastlane unit_tests
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/reports
        destination: reports
    - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
        path: app/build/test-results

  instrumentation-tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Install fastlane
          command: bundle install
      - run:
          name: Chmod permissions for Run firebase test #if permission for run_firebase_tests.sh fail, use this.
          command: sudo chmod +x ./ci/run_firebase_tests.sh
      - run:
          name: Store service account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize to gcloud
          command: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json --project=${GOOGLE_PROJECT_ID}
      - run:
          name: Run the instrumentation tests in Firebase test lab
          command: bundle exec fastlane instrumentation_tests
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}


  deploy-internal:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Install fastlane
          command: bundle install
      - run:
          name: Store the google play key
          command: echo $GOOGLE_PLAY_KEY > gplay_key.json
      - run:
          name: Init fastlane supply
          command: bundle exec fastlane supply init
#      - run:
#          name: Download ci's data
#          command: ./ci/download_ci_data.sh
      - run:
          name: Deploy the app to the internal track
          command: bundle exec fastlane deploy_internal
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}


workflows:
  version: 2
  deploy-internal:
    jobs:
      - unit-tests
#      - instrumentation-tests
#      - hold:
#          type: approval
#          requires:
#            - unit-tests
#            - instrumentation-tests
      - deploy-internal #:
#          requires:
#            - hold
        filters:
          branches:
            only: master

